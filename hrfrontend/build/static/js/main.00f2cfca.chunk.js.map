{"version":3,"sources":["logo.svg","Content/Form2.js","Content/Form.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","marginBottom","formtop","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","HrForm","classes","React","useState","sLevel","setSLevel","lastEval","setLastEval","avgMthHours","setAvgMthHours","workAccident","setWorkAccident","lastPromo","setlastPromo","noProj","setNoProj","totalTime","setTotalTime","department","setDepartment","salary","setSalary","responseData","setResponseData","setOpen","Container","component","maxWidth","className","Card","variant","CssBaseline","Avatar","Typography","onSubmit","event","preventDefault","axios","post","promo5years","target_number_project","target_time_spend_company","target_Department","target_salary","then","response","data","console","log","error","Grid","container","item","xs","TextField","label","size","type","min","oninput","style","required","value","onChange","e","target","id","gutterBottom","Slider","step","max","newValue","aria-labelledby","Input","Number","inputProps","Checkbox","color","Select","labelid","autoWidth","MenuItem","Button","fullWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00f2cfca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from \"axios\"; \r\nimport Modal from '@material-ui/core/Modal'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(3),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      marginBottom: theme.spacing(3)\r\n    },\r\n    formtop: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n      },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 3),\r\n    },\r\n  }));\r\n\r\nexport default function HrForm() {\r\n    const classes = useStyles();\r\n    const[sLevel, setSLevel] = React.useState(0.5);\r\n    const[lastEval, setLastEval] = React.useState(0.5)\r\n    const[avgMthHours, setAvgMthHours] = React.useState(0);\r\n    const[workAccident, setWorkAccident] = React.useState(false);\r\n    const[lastPromo, setlastPromo] = React.useState(false);\r\n    const[noProj, setNoProj] = React.useState(2);\r\n    const[totalTime, setTotalTime] = React.useState(2);\r\n    const[department, setDepartment] = React.useState('sales');\r\n    const[salary, setSalary] = React.useState('low');\r\n    const[responseData, setResponseData] = React.useState('');\r\n    const[open, setOpen] = React.useState(false);\r\n\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        setResponseData('')\r\n        event.preventDefault();\r\n        axios.post('http://www.andrewsai.me/hrformsubmit/', {\r\n            sLevel: sLevel,\r\n            lastEval: lastEval,\r\n            avgMthHours: avgMthHours,\r\n            workAccident: workAccident,\r\n            promo5years: lastPromo,\r\n            target_number_project: noProj,\r\n            target_time_spend_company: totalTime,\r\n            target_Department: department,\r\n            target_salary: salary\r\n        }).then((response) => {\r\n            setResponseData(response.data)\r\n            setOpen(true)\r\n            console.log('Success');\r\n            console.log(responseData)\r\n          }, (error) => {\r\n            console.log(error);\r\n          });\r\n    }\r\n    \r\n    const handleSalaryChange = (event) => {\r\n        setSalary(event.target.value);\r\n    };\r\n\r\n    const handleDepartmentChange = (event) => {\r\n        setDepartment(event.target.value);\r\n    };\r\n\r\n\r\n    const handleTotalTimeChange = (event) => {\r\n        setTotalTime(event.target.value);\r\n    };\r\n\r\n    const handleNoProjChange = (event) => {\r\n        setNoProj(event.target.value);\r\n    };\r\n\r\n    const handleSLevelSliderChange = (event, newValue) => {\r\n        setSLevel(newValue);\r\n    };\r\n    \r\n    const handleSLevelInputChange = (event) => {\r\n        setSLevel(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    const handlelastEvalSliderChange = (event, newValue) => {\r\n        setLastEval(newValue);\r\n    };\r\n    \r\n    const handlelastEvalInputChange = (event) => {\r\n        setLastEval(event.target.value === '' ? '' : Number(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            <div className={classes.paper}>\r\n                <Card variant=\"outlined\">\r\n                    <div className={classes.formtop}>\r\n                        < CssBaseline />\r\n                        <Avatar className={classes.avatar}>\r\n                            <PersonIcon />\r\n                        </Avatar>\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Employee Details\r\n                        </Typography>\r\n                        <Container maxWidth=\"xs\">\r\n                            <form className={classes.form} onSubmit={handleSubmit}>\r\n                                <Grid container spacing={2} alignItems=\"center\">\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container item xs>\r\n                                            <Typography>\r\n                                                What was the employee average monthly hours?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <TextField  \r\n                                                label=\"Hours\" \r\n                                                variant=\"standard\" \r\n                                                size=\"small\"\r\n                                                type=\"Number\" \r\n                                                min=\"0\"\r\n                                                oninput=\"validity.valid||(value='');\"\r\n                                                style={{width:80}}\r\n                                                required value={avgMthHours} \r\n                                                onChange={\r\n                                                    e => e.target.value < 0\r\n                                                    ? setAvgMthHours(e.target.value = 0)\r\n                                                    :setAvgMthHours(e.target.value)} \r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid container item xs={12}>\r\n                                        <Typography id=\"sLevel\" gutterBottom>\r\n                                            What was the employee satisfaction level?\r\n                                        </Typography>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Slider\r\n                                                    value={typeof sLevel === 'number' ? sLevel : 0.5}\r\n                                                    min={0}\r\n                                                    step={0.01}\r\n                                                    max={1}\r\n                                                    onChange={handleSLevelSliderChange}\r\n                                                    aria-labelledby=\"input-slider\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Input\r\n                                                    value={sLevel}\r\n                                                    margin=\"dense\"\r\n                                                    onChange={handleSLevelInputChange}\r\n                                                    inputProps={{\r\n                                                    step: 0.01,\r\n                                                    min: 0,\r\n                                                    max: 1,\r\n                                                    type: 'number',\r\n                                                    'aria-labelledby': 'input-slider',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid container item xs={12}>\r\n                                        <Typography id=\"lastEval\" gutterBottom>\r\n                                            What was the last evaluation of the employee?\r\n                                        </Typography>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Slider\r\n                                                    value={typeof lastEval === 'number' ? lastEval : 0.5}\r\n                                                    min={0}\r\n                                                    step={0.01}\r\n                                                    max={1}\r\n                                                    onChange={handlelastEvalSliderChange}\r\n                                                    aria-labelledby=\"input-slider\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Input\r\n                                                    value={lastEval}\r\n                                                    margin=\"dense\"\r\n                                                    onChange={handlelastEvalInputChange}\r\n                                                    inputProps={{\r\n                                                    step: 0.01,\r\n                                                    min: 0,\r\n                                                    max: 1,\r\n                                                    type: 'number',\r\n                                                    'aria-labelledby': 'input-slider',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    Did a work accident occurred?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                    onChange={() => setWorkAccident(!workAccident)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    Did they recieve a promotion in the past 5 years?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Checkbox\r\n                                                    color=\"primary\"\r\n                                                    inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                                                    onChange={() => setlastPromo(!lastPromo)}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    What number project were they part of?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Select labelid=\"noProjLabel\" id=\"noProj\" value={noProj} onChange={handleNoProjChange} autoWidth>\r\n                                                    <MenuItem value={2}>2</MenuItem>\r\n                                                    <MenuItem value={3}>3</MenuItem>\r\n                                                    <MenuItem value={4}>4</MenuItem>\r\n                                                    <MenuItem value={5}>5</MenuItem>\r\n                                                    <MenuItem value={6}>6</MenuItem>\r\n                                                    <MenuItem value={7}>7</MenuItem>\r\n                                                </Select>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    How many years were they part of the company?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Select labelid=\"totalYearsLabel\" id=\"totalTime\" value={totalTime} onChange={handleTotalTimeChange} autoWidth>\r\n                                                    <MenuItem value={2}>2</MenuItem>\r\n                                                    <MenuItem value={3}>3</MenuItem>\r\n                                                    <MenuItem value={4}>4</MenuItem>\r\n                                                    <MenuItem value={5}>5</MenuItem>\r\n                                                    <MenuItem value={6}>6+</MenuItem>\r\n                                                </Select>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n\r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    What Department were they part of?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Select labelid=\"departmentLabel\" id=\"department\" value={department} onChange={handleDepartmentChange} autoWidth>\r\n                                                    <MenuItem value={\"sales\"}>Sales</MenuItem>\r\n                                                    <MenuItem value={\"accounting\"}>Accounting</MenuItem>\r\n                                                    <MenuItem value={\"hr\"}>HR</MenuItem>\r\n                                                    <MenuItem value={\"technical\"}>Technical</MenuItem>\r\n                                                    <MenuItem value={\"support\"}>Support</MenuItem>\r\n                                                    <MenuItem value={\"management\"}>Management</MenuItem>\r\n                                                    <MenuItem value={\"IT\"}>IT</MenuItem>\r\n                                                    <MenuItem value={\"product_mng\"}>Production Management</MenuItem>\r\n                                                    <MenuItem value={\"marketing\"}>Marketing</MenuItem>\r\n                                                    <MenuItem value={\"RandD\"}>Research and Development</MenuItem>\r\n                                                </Select>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid container item xs={12}>\r\n                                        <Grid container spacing={2} alignItems=\"center\">\r\n                                            <Grid item xs>\r\n                                                <Typography>\r\n                                                    What salary group were they part of?\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Select labelid=\"salaryLabel\" id=\"salary\" value={salary} onChange={handleSalaryChange} autoWidth>\r\n                                                    <MenuItem value={\"low\"}>Low</MenuItem>\r\n                                                    <MenuItem value={\"medium\"}>Medium</MenuItem>\r\n                                                    <MenuItem value={\"high\"}>High</MenuItem>\r\n                                                </Select>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>Submit</Button>\r\n                                    \r\n                                </Grid>\r\n                            </form>\r\n\r\n                        </Container>\r\n                        <Typography component=\"h1\" variant=\"h5\" className={classes.submit}>\r\n                           {responseData}\r\n                        </Typography>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0.5);\r\n  const [noProj, setNoProj] = React.useState('');\r\n\r\n  const handleNoProjChange = (event) => {\r\n    setNoProj(event.target.value);\r\n  }\r\n  const handleSliderChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value === '' ? '' : Number(event.target.value));\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (value < 0) {\r\n      setValue(0);\r\n    } else if (value > 1) {\r\n      setValue(1);\r\n    }\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h4\">\r\n          Will my employee leave the company?\r\n        </Typography>\r\n        <Typography id=\"sLevel\" gutterBottom>\r\n          What was the employee satisfaction level?\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n        <Grid item xs>\r\n          <Slider\r\n            value={typeof value === 'number' ? value : 0}\r\n            min={0}\r\n            step={0.01}\r\n            max={1}\r\n            onChange={handleSliderChange}\r\n            aria-labelledby=\"input-slider\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Input\r\n            className={classes.input}\r\n            value={value}\r\n            margin=\"dense\"\r\n            onChange={handleInputChange}\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              step: 0.01,\r\n              min: 0,\r\n              max: 1,\r\n              type: 'number',\r\n              'aria-labelledby': 'input-slider',\r\n            }}\r\n          />\r\n        </Grid>\r\n        \r\n        <Typography id=\"lastEval\" gutterBottom>\r\n          What was the last evaluation of the employee?\r\n        </Typography>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs>\r\n            <Slider\r\n              value={typeof value === 'number' ? value : 0}\r\n              min={0}\r\n              step={0.01}\r\n              max={1}\r\n              onChange={handleSliderChange}\r\n              aria-labelledby=\"input-slider\"\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <Input\r\n              className={classes.input}\r\n              value={value}\r\n              margin=\"dense\"\r\n              onChange={handleInputChange}\r\n              onBlur={handleBlur}\r\n              inputProps={{\r\n                step: 0.01,\r\n                min: 0,\r\n                max: 1,\r\n                type: 'number',\r\n                'aria-labelledby': 'input-slider',\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Typography id=\"noProj\" gutterBottom>\r\n          What number project were they part of?\r\n        </Typography>\r\n\r\n        <Grid container spacing={2} alignItems=\"center\"> \r\n          <FormControl className={classes.FormControl}>\r\n            <Select labelid=\"noProjLabel\" id=\"noProj\" value={noProj} onChange={handleNoProjChange} autoWidth>\r\n              <MenuItem value={2}>2</MenuItem>\r\n              <MenuItem value={3}>3</MenuItem>\r\n              <MenuItem value={4}>4</MenuItem>\r\n              <MenuItem value={5}>5</MenuItem>\r\n              <MenuItem value={6}>6</MenuItem>\r\n              <MenuItem value={7}>7</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Form2 from \"./Content/Form2.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Form2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}